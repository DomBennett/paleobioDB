plot (colSums (a+0, na.rm=T), type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora)
pbdb_richness (carnivora, rank="genera", resolution=1, temporal_extent=c(0,100))
pbdb_richness (carnivora, rank="genera", resolution=0.1, temporal_extent=c(0,2))
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora, rank="genera", resolution=0.1, temporal_extent=c(0,2))
pbdb_richness (carnivora, rank="species", resolution=0.1, temporal_extent=c(0,2))
species<- data [data$rnk==rnkk, ]
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
te<- temporal_extent
a<- temporal_range [,1]>=min(te) & temporal_range [,2]<=min(te)+1
for (i in min(te)+1:(max(te)-1)){
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
plot (colSums (a+0, na.rm=T), type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
return (a+0)
pbdb_richness (carnivora, rank="species", resolution=1, temporal_extent=c(0,100))
pbdb_richness (carnivora, rank="species", resolution=0.1, temporal_extent=c(0,100))
pbdb_richness (carnivora, rank="species", resolution=0.1, temporal_extent=c(0,10))
pbdb_richness (carnivora, rank="species", resolution=0.1, temporal_extent=c(0,5))
pbdb_richness (carnivora, rank="species", resolution=0.01, temporal_extent=c(0,5))
pbdb_richness (carnivora, rank="species", resolution=0.01, temporal_extent=c(0,3))
pbdb_richness (carnivora, rank="genera", resolution=0.01, temporal_extent=c(0,3))
pbdb_richness (carnivora, rank="families", resolution=0.01, temporal_extent=c(0,3))
pbdb_richness (carnivora, rank="families", resolution=0.01, temporal_extent=c(0,2))
pbdb_richness (carnivora, rank="families", resolution=0.01, temporal_extent=c(0,3))
rnnk<- data.frame (c("species", "genera", "families", "orders", "classes"),
c(3,5,9,13,15))
rnkk<- rnnk [match (rank, rnnk[,1]), 2]
species<- data [data$rnk==rnkk, ]
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
te<- temporal_extent
a<- temporal_range [,1]>=min(te) & temporal_range [,2]<=min(te)+1
for (i in min(te)+1:(max(te)-1)){
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
a+0
colSums (a+0, na.rm=T)
richness<- colSums (a+0, na.rm=T)
names (richness)
names (richness)<- c(min (te):max(te))
max(te)
min (te)
temporal_range [,1]>=min(te)
temporal_range [,1]
temporal_range
richness<- colSums (a+0, na.rm=T)
names (richness)<- c(min (te):max(te))
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
te<- temporal_extent
a<- temporal_range [,2]==min(te)
for (i in min(te)+1:(max(te)-1)){
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
richness<- colSums (a+0, na.rm=T)
names (richness)<- c(min (te):max(te))
richness
dim (richness)
length(richness)
length (c(min (te):max(te)))
c(min (te):max(te))
b<- temporal_range [,1]==max(te)
a<- cbind (c,b)
richness<- colSums (a+0, na.rm=T)
a<- temporal_range [,2]==min(te)
for (i in min(te)+1:(max(te)-1)){
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
b<- temporal_range [,1]==max(te)
a<- cbind (c,b)
richness<- colSums (a+0, na.rm=T)
a<- temporal_range [,2]==min(te)
for (i in min(te)+1:(max(te)-1)){
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
b<- temporal_range [,1]==max(te)
a<- cbind (a,b)
richness<- colSums (a+0, na.rm=T)
length(richness)
length (c(min (te):max(te)))
names (richness)<- c(min (te):max(te))
plot (colSums (a+0, na.rm=T), type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
return ()
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
richness
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora)
pbdb_richness (carnivora, rank="genera")
pbdb_richness (carnivora, rank="genera",
resolution=0.1, temporal_extent=c(0,3))
pbdb_richness (carnivora, rank="species",
resolution=0.1, temporal_extent=c(0,3))
pbdb_richness (carnivora, rank="species",
resolution=0.01, temporal_extent=c(0,3))
sequence<- seq (from=min(te)+1, to= (max(te)-1), by=resolution)
te<- temporal_extent
a<- temporal_range [,2]==min(te)
sequence<- seq (from=min(te)+1, to= (max(te)-1), by=resolution)
for (i in sequence) {
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
b<- temporal_range [,1]==max(te)
a<- cbind (a,b)
richness<- colSums (a+0, na.rm=T)
names (richness)<- c(min (te):max(te))
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_ext_evo (carnivora, rank="species")
pbdb_richness (carnivora, rank="species",
resolution=0.01, temporal_extent=c(0,3))
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora, rank="species",
resolution=0.01, temporal_extent=c(0,3))
sequence
sequence<- seq (from=min(te), to= (max(te)), by=resolution)
sequence[2:length (sequence)-1]
sequence
sequence[2:length (sequence)-1]
sequence[3:length (sequence)-1]
sequence [1]
sequence [2]
sequence[2:length (sequence)-1])
sequence[2:length (sequence)-1]
sequence [2:5]
sequence[2:(length (sequence)-1)]
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora, rank="species",
resolution=0.01, temporal_extent=c(0,3))
rnnk<- data.frame (c("species", "genera", "families", "orders", "classes"),
c(3,5,9,13,15))
rnkk<- rnnk [match (rank, rnnk[,1]), 2]
species<- data [data$rnk==rnkk, ]
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
te<- temporal_extent
a<- temporal_range [,2]==min(te)
sequence<- seq (from=min(te), to= (max(te)), by=resolution)
for (i in sequence[2:(length (sequence)-1)]) {
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
b<- temporal_range [,1]==max(te)
a<- cbind (a,b)
richness<- colSums (a+0, na.rm=T)
names (richness)<- sequence
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
richness
sequence
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora, rank="species",
resolution=0.01, temporal_extent=c(0,3))
resolution=0.01
temporal_extent=c(0,3)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
te<- temporal_extent
a<- temporal_range [,2]==min(te)
sequence<- seq (from=min(te), to= (max(te)), by=resolution)
sequence
a<- temporal_range [,2]==min(te)
for (i in sequence[2:(length (sequence)-1)]) {
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
b<- temporal_range [,1]==max(te)
a<- cbind (a,b)
richness<- colSums (a+0, na.rm=T)
richness
temporal_range [,1]==max(te)
max_sp
names (richness)<- sequence
dim (richness)
length(richness)
sequence[2:(length (sequence)-1)]
resolution=1
temporal_extent=c(0,5)
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
te<- temporal_extent
sequence<- seq (from=min(te), to= (max(te)), by=resolution)
a<- temporal_range [,2]<=min(te)
for (i in sequence[2:(length (sequence)-1)]) {
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
a<- cbind (a,b)
}
b<- temporal_range [,1]>=max(te)
a<- cbind (a,b)
richness<- colSums (a+0, na.rm=T)
length(richness)
names (richness)<- sequence
sequence
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (1, labels=sequence)
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)")
richness
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)")
richness<- data.frame (sequence, richness)
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)")
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora, rank="species",
resolution=1, temporal_extent=c(0,5))
pbdb_richness (carnivora, rank="species",
resolution=1, temporal_extent=c(0,10))
temporal_range
a
head (a)
head (temporal_range)
sequence[2:(length (sequence)-1)]
temporal_range [,1]>=te [i]
temporal_range [,1]>=te [i]
i<- 1
temporal_range [,1]>=te [i]
temporal_range [,2]<=te [i+1]
temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
i<- 2
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
b
temporal_range [,1]>=te [i]
library (raster)
?getData
pbdb_subtaxa (carnivora)
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
i<- 2
b<- temporal_range [,1]>=te [i] & temporal_range [,2]<=te [i+1]
b
head (b)
head (temporal_range)
te [i]
b
head (b)
head (temporal_range)
te
te [i]
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_richness (carnivora, rank="species",
resolution=1, temporal_extent=c(0,10))
pbdb_richness (carnivora, rank="species",
resolution=1, temporal_extent=c(0,10))
pbdb_richness (carnivora, rank="species",
resolution=1, temporal_extent=c(0,4))
pbdb_richness <- function (data, rank= "species", resolution=1, temporal_extent=c(0,100)){
if (length (data$taxon_rank)!=0){
species<- data [data$taxon_rank==rank, ]
max_sp<- aggregate(species$early_age, list(species$taxon_name), max)
min_sp<- aggregate(species$late_age, list(species$taxon_name), min)
}
if (length (data$rnk)!=0){
rnnk<- data.frame (c("species", "genera", "families", "orders", "classes"),
c(3,5,9,13,15))
rnkk<- rnnk [match (rank, rnnk[,1]), 2]
species<- data [data$rnk==rnkk, ]
}
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
te<- temporal_extent
sequence<- seq (from=min(te), to= (max(te)), by=resolution)
a<- temporal_range [,2]<=min(te)
for (i in sequence[2:(length (sequence)-1)]) {
b<- temporal_range [,1]>=sequence [i] & temporal_range [,2]<=sequence [i+1]
a<- cbind (a,b)
}
b<- temporal_range [,1]>=max(te)
a<- cbind (a,b)
richness<- colSums (a+0, na.rm=T)
richness<- data.frame (sequence, richness)
plot (richness, type="o", pch=16, ylab=paste ("Number of", rank), xlab="Time (Ma)", axes=F)
axis (1)
axis (2)
return (richness)
}
pbdb_richness (carnivora, rank="species",
resolution=1, temporal_extent=c(0,4))
pbdb_richness (carnivora, rank="species",
resolution=1, temporal_extent=c(0,10))
pbdb_richness (carnivora, rank="genera",
resolution=1, temporal_extent=c(0,10))
pbdb_ext_evo<- function (data, rank="species") {
if (length (data$taxon_rank)!=0){
species<- data [data$taxon_rank==rank, ]
max_sp<- aggregate(species$early_age, list(species$taxon_name), max)
min_sp<- aggregate(species$late_age, list(species$taxon_name), min)
}
if (length (data$rnk)!=0){
rnnk<- data.frame (c("species", "genera", "families", "orders", "classes"),
c(3,5,9,13,15))
rnkk<- rnnk [match (rank, rnnk[,1]), 2]
species<- data [data$rnk==rnkk, ]
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
}
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
evo<- as.data.frame (table (temporal_range[,1]), stringsAsFactors=F)
ext<- as.data.frame (table (temporal_range[,2]), stringsAsFactors=F)
ext<- ext [ext$Var1!=0,]
evo$Var1<- as.numeric (evo$Var1)
ext$Var1<- as.numeric (ext$Var1)
ymx<- max (c(evo[,2], ext[,2]))
ymm<- min (c(evo[,2], ext[,2]))
xmx<- max (c(evo[,1], ext[,1]))
xmm<- min (c(evo[,1], ext[,1]))
par (mar=c(4,4,2,2))
plot (evo, xlab="Time (Ma)", type="o", pch=16,
ylab=paste ("Number of", rank), axes=FALSE, xlim=c(xmm-1, xmx+1),
ylim=c(ymm-1, ymx+1))
lines (ext, type="o", pch=16, col="red")
legend("topright", c("evolution","extinction"), cex=0.8,
col=c("black","red"), pch=16:16, lty=1:2);
axis (1)
axis (2)
}
#' pbdb_richness
pbdb_ext_evo (carnivora, rank="species")
pbdb_ext_evo<- function (data, rank="species") {
if (length (data$taxon_rank)!=0){
species<- data [data$taxon_rank==rank, ]
max_sp<- aggregate(species$early_age, list(species$taxon_name), max)
min_sp<- aggregate(species$late_age, list(species$taxon_name), min)
}
if (length (data$rnk)!=0){
rnnk<- data.frame (c("species", "genera", "families", "orders", "classes"),
c(3,5,9,13,15))
rnkk<- rnnk [match (rank, rnnk[,1]), 2]
species<- data [data$rnk==rnkk, ]
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
}
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
evo<- as.data.frame (table (temporal_range[,1]), stringsAsFactors=F)
ext<- as.data.frame (table (temporal_range[,2]), stringsAsFactors=F)
ext<- ext [ext$Var1!=0,]
evo$Var1<- as.numeric (evo$Var1)
ext$Var1<- as.numeric (ext$Var1)
ymx<- max (c(evo[,2], ext[,2]))
ymm<- min (c(evo[,2], ext[,2]))
xmx<- max (c(evo[,1], ext[,1]))
xmm<- min (c(evo[,1], ext[,1]))
par (mar=c(4,4,2,2))
plot (evo, xlab="Time (Ma)", type="o", pch=16,
ylab=paste ("Number of", rank), axes=FALSE, xlim=c(xmm-1, xmx+1),
ylim=c(ymm-1, ymx+1))
lines (ext, type="o", pch=16, col="red")
legend("topright", c("evolution","extinction"), cex=0.8,
col=c("black","skyblue2"), pch=16:16, lty=1:2);
axis (1)
axis (2)
}
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_ext_evo (carnivora, rank="species")
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_ext_evo (carnivora, rank="species")
source.with.encoding('R/pbdb_temporal_functions.R', encoding='UTF-8')
pbdb_ext_evo (carnivora, rank="species")
library(ggplot2)
# create factors with value labels
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# Kernel density plots for mpg
# grouped by number of gears (indicated by color)
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
mtcars$gear
head (mtcars)
head (evo)
evo<- cbind (evo, "evolution")
evo
ext<- cbind (ext, "extinction")
dat<- rbind (evo, ext)
evo<- cbind (evo, "evolution")
names (evo)[3]<- ""
ext<- cbind (ext, "extinction")
names (ext)[3]<- ""
dat<- rbind (evo, ext)
evo$Var1<- as.numeric (evo$Var1)
ext$Var1<- as.numeric (ext$Var1)
evo<- cbind (evo, "evolution")
names (evo)[3]<- ""
ext<- cbind (ext, "extinction")
names (ext)[3]<- ""
dat<- rbind (evo, ext)
head (evo)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
evo<- as.data.frame (table (temporal_range[,1]), stringsAsFactors=F)
ext<- as.data.frame (table (temporal_range[,2]), stringsAsFactors=F)
ext<- ext [ext$Var1!=0,]
evo$Var1<- as.numeric (evo$Var1)
ext$Var1<- as.numeric (ext$Var1)
ymx<- max (c(evo[,2], ext[,2]))
ymm<- min (c(evo[,2], ext[,2]))
xmx<- max (c(evo[,1], ext[,1]))
xmm<- min (c(evo[,1], ext[,1]))
par (mar=c(4,4,2,2))
evo<- cbind (evo, "evolution")
names (evo)[3]<- ""
ext<- cbind (ext, "extinction")
names (ext)[3]<- ""
dat<- rbind (evo, ext)
dat
ggplot (dat)
head (mtcars)
qplot(Freq, data=data, geom="density", fill="", alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
evo<- as.data.frame (table (temporal_range[,1]), stringsAsFactors=F)
ext<- as.data.frame (table (temporal_range[,2]), stringsAsFactors=F)
ext<- ext [ext$Var1!=0,]
evo$Var1<- as.numeric (evo$Var1)
ext$Var1<- as.numeric (ext$Var1)
ymx<- max (c(evo[,2], ext[,2]))
ymm<- min (c(evo[,2], ext[,2]))
xmx<- max (c(evo[,1], ext[,1]))
xmm<- min (c(evo[,1], ext[,1]))
par (mar=c(4,4,2,2))
evo<- cbind (evo, "evolution")
names (evo)[3]<- "evo_ext"
ext<- cbind (ext, "extinction")
names (ext)[3]<- "evo_ext"
dat<- rbind (evo, ext)
head (evo)
qplot(Freq, data=data, geom="density", fill="", alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
qplot(Freq, data=data, geom="density", fill="evo_ext", alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
head (evo)
qplot(Freq, data=dat, geom="density", fill="evo_ext", alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),
method="lm", formula=y~x, color=cyl,
main="Regression of MPG on Weight",
xlab="Weight", ylab="Miles per Gallon")
head (dat)
h <- ggplot(dat, aes(x=Var1))
plot (h)
h + geom_ribbon(aes(ymin=0, ymax=Freq))
+ geom_line(aes(y=Freq))
h + geom_ribbon(aes(ymin=0, ymax=Freq))+
geom_line(aes(y=Freq))
pbdb_ext_evo (carnivora, rank="species")
?gridSample
??gridSample
