}
if (rank=="species"){
selection<- data [data$taxon_rank==rank, ]
max_sp<- tapply(selection$early_age, list(selection$taxon_no), max)
min_sp<- tapply(selection$late_age, list(selection$taxon_no), min)
temporal_range<- data.frame (max_sp, min_sp)
row.names (temporal_range)<- paste (selection$genus_name[match (row.names (temporal_range),
selection$taxon_no)],
selection$species_name [match (row.names (temporal_range),
selection$taxon_no)])
}
if (rank=="genus"){
max_sp<- tapply(data$early_age, list(data$genus_name), max)
min_sp<- tapply(data$late_age, list(data$genus_name), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="family"){
max_sp<- tapply(data$early_age, list(data$family), max)
min_sp<- tapply(data$late_age, list(data$family), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="order"){
max_sp<- tapply(data$early_age, list(data$order), max)
min_sp<- tapply(data$late_age, list(data$order), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="class"){
max_sp<- tapply(data$early_age, list(data$class), max)
min_sp<- tapply(data$late_age, list(data$class), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="phylum"){
max_sp<- tapply(data$early_age, list(data$phylum), max)
min_sp<- tapply(data$late_age, list(data$phylum), min)
temporal_range<- data.frame (max_sp, min_sp)
}
}
if('rnk' %in% colnames(data)) {
if (!'idt' %in% colnames(data)){
stop("ERROR: please, add show=c('phylo', 'ident') to your pbdb_occurrences query")
}
if (rank=="species"){
selection<- data [data$rnk==3, ]
max_sp<- tapply(selection$eag, list(selection$tid), max)
min_sp<- tapply(selection$lag, list(selection$tid), min)
temporal_range<- data.frame (max_sp, min_sp)
row.names (temporal_range)<- paste (selection$idt[match (row.names (temporal_range),
selection$tid)],
selection$ids [match (row.names (temporal_range),
selection$tid)])
}
if (rank=="genus"){
max_sp<- tapply(data$eag, list(data$idt), max)
min_sp<- tapply(data$lag, list(data$idt), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="family"){
max_sp<- tapply(data$eag, list(data$fml), max)
min_sp<- tapply(data$lag, list(data$fml), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="order"){
max_sp<- tapply(data$eag, list(data$odn), max)
min_sp<- tapply(data$lag, list(data$odn), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="class"){
max_sp<- tapply(data$eag, list(data$cll), max)
min_sp<- tapply(data$lag, list(data$cll), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="phylum"){
max_sp<- tapply(data$eag, list(data$phl), max)
min_sp<- tapply(data$lag, list(data$phl), min)
temporal_range<- data.frame (max_sp, min_sp)
}
}
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
ext<- as.data.frame (table (temporal_range[,2]), stringsAsFactors=F)
ext<- ext [ext$Var1!=0,]
ext$Var1<- as.numeric (ext$Var1)
ymx<- max (ext[,2])
ymn<- min (ext[,2])
xmx<- max (ext[,1])
xmn<- min (ext[,1])
if (do.plot==TRUE){
plot.new()
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, evo$Var1, xmx)
yy = c(0, evo$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1)
axis(2, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(rank, line= 3 , adj=0, side=2)
}
names (ext)<- c("time", rank)
return (ext)
}
pbdb_ext (canis, rank="species")
pbdb_ext (data, rank="species")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
ext<- as.data.frame (table (temporal_range[,2]), stringsAsFactors=F)
ext<- ext [ext$Var1!=0,]
ext$Var1<- as.numeric (ext$Var1)
ymx<- max (ext[,2])
ymn<- min (ext[,2])
xmx<- max (ext[,1])
xmn<- min (ext[,1])
if (do.plot==TRUE){
plot.new()
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, evo$Var1, xmx)
yy = c(0, evo$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1)
axis(2, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(rank, line= 3 , adj=0, side=2)
}
plot.new()
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, evo$Var1, xmx)
yy = c(0, evo$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
xx
yy
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, ext$Var1, xmx)
yy = c(0, ext$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1)
axis(2, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(rank, line= 3 , adj=0, side=2)
}
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, ext$Var1, xmx)
yy = c(0, ext$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1)
axis(2, las=1)
axis(1, line=3)
axis(2, line=2, las=1)
axis(2, line=1, las=1)
plot.new()
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, ext$Var1, xmx)
yy = c(0, ext$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1)
axis(2, line=1, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(rank, line= 3 , adj=0, side=2)
plot.new()
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, ext$Var1, xmx)
yy = c(0, ext$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1, line=1)
axis(2, line=1, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(rank, line= 3 , adj=0, side=2)
response<-  pbdb_evo (data,
rank="family",
, do.plot=F)
response
expect_true(is.data.frame (response))
expect_is (names (response)[1], "character")
expect_true (dim (response)[1]>=1)
response<-  pbdb_ext (data,
rank="family",
, do.plot=F)
response<-  pbdb_ext (data,
rank="species",
, do.plot=F)
expect_true(is.data.frame (response))
expect_is (names (response)[1], "character")
expect_true (dim (response)[1]>=1)
title ("Evolution")
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
evo[,2]<- (evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
evo
evo[,2]<- evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
(evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
evo$Freq
evo
evo<- as.data.frame (table (temporal_range[,1]), stringsAsFactors=F)
evo$Var1<- as.numeric (evo$Var1)
evo
evo[,2]<- (evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
evo
perc<- (evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
perc
if (perc==T){
perc<- (evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
ymx<- max (perc)
ymn<- min (perc)
xmx<- max (ext[,1])
xmn<- min (ext[,1])
} else {
ymx<- max (evo[,2])
ymn<- min (evo[,2])
xmx<- max (evo[,1])
xmn<- min (evo[,1])
}
perc==T
pbdb_evo<- function (data, rank="species",
colour="#0000FF30", bord="#0000FF", do.plot=TRUE) {
if('taxon_rank' %in% colnames(data)) {
if (!'genus_name' %in% colnames(data)){
stop("ERROR: please, add show=c('phylo', 'ident') to your pbdb_occurrences query")
}
if (rank=="species"){
selection<- data [data$taxon_rank==rank, ]
max_sp<- tapply(selection$early_age, list(selection$taxon_no), max)
min_sp<- tapply(selection$late_age, list(selection$taxon_no), min)
temporal_range<- data.frame (max_sp, min_sp)
row.names (temporal_range)<- paste (selection$genus_name[match (row.names (temporal_range),
selection$taxon_no)],
selection$species_name [match (row.names (temporal_range),
selection$taxon_no)])
}
if (rank=="genus"){
max_sp<- tapply(data$early_age, list(data$genus_name), max)
min_sp<- tapply(data$late_age, list(data$genus_name), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="family"){
max_sp<- tapply(data$early_age, list(data$family), max)
min_sp<- tapply(data$late_age, list(data$family), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="order"){
max_sp<- tapply(data$early_age, list(data$order), max)
min_sp<- tapply(data$late_age, list(data$order), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="class"){
max_sp<- tapply(data$early_age, list(data$class), max)
min_sp<- tapply(data$late_age, list(data$class), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="phylum"){
max_sp<- tapply(data$early_age, list(data$phylum), max)
min_sp<- tapply(data$late_age, list(data$phylum), min)
temporal_range<- data.frame (max_sp, min_sp)
}
}
if('rnk' %in% colnames(data)) {
if (!'idt' %in% colnames(data)){
stop("ERROR: please, add show=c('phylo', 'ident') to your pbdb_occurrences query")
}
if (rank=="species"){
selection<- data [data$rnk==3, ]
max_sp<- tapply(selection$eag, list(selection$tid), max)
min_sp<- tapply(selection$lag, list(selection$tid), min)
temporal_range<- data.frame (max_sp, min_sp)
row.names (temporal_range)<- paste (selection$idt[match (row.names (temporal_range),
selection$tid)],
selection$ids [match (row.names (temporal_range),
selection$tid)])
}
if (rank=="genus"){
max_sp<- tapply(data$eag, list(data$idt), max)
min_sp<- tapply(data$lag, list(data$idt), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="family"){
max_sp<- tapply(data$eag, list(data$fml), max)
min_sp<- tapply(data$lag, list(data$fml), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="order"){
max_sp<- tapply(data$eag, list(data$odn), max)
min_sp<- tapply(data$lag, list(data$odn), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="class"){
max_sp<- tapply(data$eag, list(data$cll), max)
min_sp<- tapply(data$lag, list(data$cll), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="phylum"){
max_sp<- tapply(data$eag, list(data$phl), max)
min_sp<- tapply(data$lag, list(data$phl), min)
temporal_range<- data.frame (max_sp, min_sp)
}
}
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
evo<- as.data.frame (table (temporal_range[,1]), stringsAsFactors=F)
evo$Var1<- as.numeric (evo$Var1)
if (perc==TRUE){
perce<- (evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
ymx<- max (perce)
ymn<- min (perce)
xmx<- max (ext[,1])
xmn<- min (ext[,1])
plot.new()
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, evo$Var1, xmx)
yy = c(0, c(0,perc), 0)
polygon(xx, yy, col=colour, border=bord)
axis(1)
axis(2, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(paste ("Percentage of new", rank), line= 3 , adj=0, side=2)
title ("Evolution")
} else {
ymx<- max (evo[,2])
ymn<- min (evo[,2])
xmx<- max (evo[,1])
xmn<- min (evo[,1])
}
if (do.plot==TRUE){
plot.new()
par (mar=c(5,5,2,5),font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, evo$Var1, xmx)
yy = c(0, evo$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1, line=1)
axis(2, line=1, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(rank, line= 3 , adj=0, side=2)
title ("Evolution")
}
names (evo)<- c("time", rank)
return (evo)
}
}
pbdb_evo<- function (data, rank="species",
colour="#0000FF30", bord="#0000FF", do.plot=TRUE, perc==F) {
if('taxon_rank' %in% colnames(data)) {
if (!'genus_name' %in% colnames(data)){
stop("ERROR: please, add show=c('phylo', 'ident') to your pbdb_occurrences query")
}
if (rank=="species"){
selection<- data [data$taxon_rank==rank, ]
max_sp<- tapply(selection$early_age, list(selection$taxon_no), max)
min_sp<- tapply(selection$late_age, list(selection$taxon_no), min)
temporal_range<- data.frame (max_sp, min_sp)
row.names (temporal_range)<- paste (selection$genus_name[match (row.names (temporal_range),
selection$taxon_no)],
selection$species_name [match (row.names (temporal_range),
selection$taxon_no)])
}
if (rank=="genus"){
max_sp<- tapply(data$early_age, list(data$genus_name), max)
min_sp<- tapply(data$late_age, list(data$genus_name), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="family"){
max_sp<- tapply(data$early_age, list(data$family), max)
min_sp<- tapply(data$late_age, list(data$family), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="order"){
max_sp<- tapply(data$early_age, list(data$order), max)
min_sp<- tapply(data$late_age, list(data$order), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="class"){
max_sp<- tapply(data$early_age, list(data$class), max)
min_sp<- tapply(data$late_age, list(data$class), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="phylum"){
max_sp<- tapply(data$early_age, list(data$phylum), max)
min_sp<- tapply(data$late_age, list(data$phylum), min)
temporal_range<- data.frame (max_sp, min_sp)
}
}
if('rnk' %in% colnames(data)) {
if (!'idt' %in% colnames(data)){
stop("ERROR: please, add show=c('phylo', 'ident') to your pbdb_occurrences query")
}
if (rank=="species"){
selection<- data [data$rnk==3, ]
max_sp<- tapply(selection$eag, list(selection$tid), max)
min_sp<- tapply(selection$lag, list(selection$tid), min)
temporal_range<- data.frame (max_sp, min_sp)
row.names (temporal_range)<- paste (selection$idt[match (row.names (temporal_range),
selection$tid)],
selection$ids [match (row.names (temporal_range),
selection$tid)])
}
if (rank=="genus"){
max_sp<- tapply(data$eag, list(data$idt), max)
min_sp<- tapply(data$lag, list(data$idt), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="family"){
max_sp<- tapply(data$eag, list(data$fml), max)
min_sp<- tapply(data$lag, list(data$fml), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="order"){
max_sp<- tapply(data$eag, list(data$odn), max)
min_sp<- tapply(data$lag, list(data$odn), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="class"){
max_sp<- tapply(data$eag, list(data$cll), max)
min_sp<- tapply(data$lag, list(data$cll), min)
temporal_range<- data.frame (max_sp, min_sp)
}
if (rank=="phylum"){
max_sp<- tapply(data$eag, list(data$phl), max)
min_sp<- tapply(data$lag, list(data$phl), min)
temporal_range<- data.frame (max_sp, min_sp)
}
}
colnames (temporal_range)<- c("max", "min")
temporal_range<- temporal_range[with(temporal_range, order(-max, min)), ]
evo<- as.data.frame (table (temporal_range[,1]), stringsAsFactors=F)
evo$Var1<- as.numeric (evo$Var1)
if (perc==TRUE){
perce<- (evo$Freq[1:length (evo$Freq)-1]/evo$Freq[2:length (evo$Freq)])*100
ymx<- max (perce)
ymn<- min (perce)
xmx<- max (ext[,1])
xmn<- min (ext[,1])
plot.new()
par (font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, evo$Var1, xmx)
yy = c(0, c(0,perc), 0)
polygon(xx, yy, col=colour, border=bord)
axis(1)
axis(2, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(paste ("Percentage of new", rank), line= 3 , adj=0, side=2)
title ("Evolution")
} else {
ymx<- max (evo[,2])
ymn<- min (evo[,2])
xmx<- max (evo[,1])
xmn<- min (evo[,1])
}
if (do.plot==TRUE){
plot.new()
par (mar=c(5,5,2,5),font.lab=1, col.lab="grey20", col.axis="grey50", cex.axis=0.8)
plot.window(xlim=c(xmn, xmx), xaxs="i",
ylim=c(ymn,ymx), yaxs="i")
abline(v=seq(xmn, xmx, by=1), col="grey90", lwd=1)
abline(h=seq(0, ymx,
by=(ymx/10)), col="grey90", lwd=1)
xx = c(xmn, evo$Var1, xmx)
yy = c(0, evo$Freq, 0)
polygon(xx, yy, col=colour, border=bord)
axis(1, line=1)
axis(2, line=1, las=1)
mtext("Million years before present", line=3, adj=1, side=1)
mtext(rank, line= 3 , adj=0, side=2)
title ("Evolution")
}
names (evo)<- c("time", rank)
return (evo)
}
}
