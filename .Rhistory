axis(1, col="gray30")
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
segments(x0 = t_range$min,
y0 = t_range$pos,
x1 = t_range$max,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.8, col="gray30")
axis(1, col="gray30")
axis(1, col="gray30", wdt=2)
species
species [6,4]<- "Canis familiaris"
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
pos<- c(1:dim (temporal_range)[1])
t_range<- cbind (temporal_range, pos)
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
segments(x0 = t_range$min,
y0 = t_range$pos,
x1 = t_range$max,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.8, col="gray30")
axis(1, col="gray30")
species
t_range
species [5,7]<- 1.5
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
pos<- c(1:dim (temporal_range)[1])
t_range<- cbind (temporal_range, pos)
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
segments(x0 = t_range$min,
y0 = t_range$pos,
x1 = t_range$max,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.8, col="gray30")
axis(1, col="gray30")
t_range
order (t_range$max)
species [3,8]<- 0.3
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
pos<- c(1:dim (temporal_range)[1])
t_range<- cbind (temporal_range, pos)
order_by_appearance<- order (t_range$max)
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
segments(x0 = t_range$min,
y0 = t_range$pos,
x1 = t_range$max,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.8, col="gray30")
species
t_range
order (t_range$max)
t_range$max
rank (t_range$max)
order (t_range$max)
order_by_appearance<- t_range [order (t_range$max),]
t_range<- order_by_appearance
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
segments(x0 = t_range$min,
y0 = t_range$pos,
x1 = t_range$max,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.8, col="gray30")
axis(1, col="gray30")
order_by_appearance
t_range$pos<- c(1:dim (t_range)[1])
t_range
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
y0 = t_range$pos,
x1 = t_range$max,
segments(x0 = t_range$min,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.8, col="gray30")
axis(1, col="gray30")
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
segments(x0 = t_range$min,
y0 = t_range$pos,
x1 = t_range$max,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.8, col="gray30")
axis(1, col="gray30")
plot(c(min (t_range$min), max (t_range$max)),
c(0, dim (t_range)[1]+1),
type = "n",axes = FALSE, xlab = "Time (Ma)", ylab = "")
segments(x0 = t_range$min,
y0 = t_range$pos,
x1 = t_range$max,
y1 = t_range$pos,
col = "red",
lwd = 6,
lend = 2)
text(x = t_range$min, y = t_range$pos +0.3,
labels = row.names (t_range), adj=c(0,0), cex=0.6, col="gray30")
axis(1, col="gray30")
t_range
species<- data [data$rnk==3, ]
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
pos<- c(1:dim (temporal_range)[1])
t_range<- cbind (temporal_range, pos)
t_range
order_by_appearance
t_range<- order_by_appearance
t_range$pos<- c(1:dim (t_range)[1])
t_range
c(1:1000)
seq(c(1:1000), 2)
?seq
seq(from =1, to= 1000, by=2)
seq(from=2, to=1000, by=100)
seq(from=0, to=1000, by=100)
division<- seq(from=0, to=1000, by=100)
t_range
which (t_range$max > 0.5 )
division<- seq(from=0, to=2, by=0.2)
division
which (t_range$max > division)
which (t_range$max > division)
which (t_range$max > division [1])
division [1]
which (t_range$min <= division [1] && t_range$max>= division [2] )
division [2]
t_range$max
which (t_range$min <= division [1] & t_range$max>= division [2])
t_range$min <= division [1]
t_range$max>= division [2]
t_range$max
t_range$min
division
setwd ("C:/clima_Sara/downscaling_worldclim7MIROC_21")
setwd ("C:/clima_Sara/downscaling_worldclim/MIROC_21")
library (raster)
library (rgdal)
bio1<- raster ("bio1.bil")
plot (bio1)
list.files ("C:/clima_Sara/downscaling_worldclim/MIROC_21")
list.files ("C:/clima_Sara/downscaling_worldclim/MIROC_21", pattern=".bil")
variables<- list.files ("C:/clima_Sara/downscaling_worldclim/MIROC_21", pattern=".bil")
var_stack<- NULL
for (x in variables){
var<- raster (x)
var_stack<- stack(var_stack, var)
}
}
variables
var
var<- raster (x)
var
x
var<- raster (x)
var
var1<- raster (x)
var1
raster (x)
x
str (x)
var1<- raster (x)
var1
var1<- raster ("bio1.bil")
var1
setwd ("C:/clima_Sara/downscaling_worldclim/MIROC_21")
var1<- raster ("bio1.bil")
var1
library(rgdal)
library(ggplot2)
setwd ("C:/Users/sara/Documents/_CIENCIAS/pbdb/docs_desarrollo")
wmap <- readOGR(dsn="ne_110m_land.shp", layer="ne_110m_land")
grat <- readOGR("ne_110m_graticules_15.shp", layer="ne_110m_graticules_15")
bbox <- readOGR("ne_110m_wgs84_bounding_box.shp", layer="ne_110m_wgs84_bounding_box")
countries <- readOGR("ne_110m_admin_0_countries.shp", layer="ne_110m_admin_0_countries")
# Winkel tripel projection
countries_wintri <- spTransform(countries, CRS("+proj=wintri"))
bbox_wintri <- spTransform(bbox, CRS("+proj=wintri"))
wmap_wintri <- spTransform(wmap, CRS("+proj=wintri"))
grat_wintri <- spTransform(grat, CRS("+proj=wintri"))
places <- readOGR("ne_110m_populated_places.shp", layer="ne_110m_populated_places")
places_df <- as(places, "data.frame")
places_robin_df <- project(cbind(places_df$LONGITUDE, places_df$LATITUDE), proj="+init=ESRI:54030")
places_robin_df <- as.data.frame(places_robin_df)
places_robin_df <- project(cbind(places_df$LONGITUDE, places_df$LATITUDE), proj="+proj=wintri")
places_robin_df <- as.data.frame(places_robin_df)
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df, aes(LONGITUDE, LATITUDE, group=NULL, fill=NULL, size=POP2000), color="#32caf6", alpha=I(8/10)) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="World map (Winkel Tripel)") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") # change colors & remove legend
ggplot(bbox_robin_df, aes(long,lat, group=group)) +
geom_polygon(fill="white") +
geom_polygon(data=countries_robin_df, aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df, aes(LONGITUDE, LATITUDE, group=NULL, fill=NULL, size=POP2000), color="#32caf6", alpha=I(8/10)) +
geom_path(data=countries_robin_df, aes(long,lat, group=group, fill=hole), color="white", size=0.3) +
geom_path(data=grat_df_robin, aes(long, lat, group=group, fill=NULL), linetype="dashed", color="grey50") +
labs(title="PBDB: Quaternary + Canidae") +
coord_equal() +
theme_opts +
scale_fill_manual(values=c("black", "white"), guide="none")+
scale_size_continuous(range=c(1,20), guide="none")# change colors & remove legend
names(places_robin_df) <- c("LONGITUDE", "LATITUDE")
places_robin_df$POP2000 <- places_df$POP2000
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df, aes(LONGITUDE, LATITUDE, group=NULL, fill=NULL, size=POP2000), color="#32caf6", alpha=I(8/10)) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="World map (Winkel Tripel)") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") # change colors & remove legend
theme_opts <- list(theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill="white"),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size=22)))
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df, aes(LONGITUDE, LATITUDE, group=NULL, fill=NULL, size=POP2000), color="#32caf6", alpha=I(8/10)) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="World map (Winkel Tripel)") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") # change colors & remove legend
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df, aes(LONGITUDE, LATITUDE, group=NULL, fill=NULL, size=POP2000), color="#32caf6", alpha=I(8/10)) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="World map (Winkel Tripel)") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") # change colors & remove legend
scale_size_continuous(range=c(1,20), guide="none")# change colors & remove legend
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df, aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000),
color="#32caf6", alpha=I(8/10)) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="World map (Winkel Tripel)") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") # change colors & remove legend
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df, aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000),
color="#32caf6", alpha=I(8/10)) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
# geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="World map (Winkel Tripel)") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") + # change colors & remove legend
scale_size_continuous(range=c(1,20),
guide="none") # change colors & remove legend
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df,
aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000),
color="#32caf6", alpha=0.5) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
# geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="PBDB") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") + # change colors & remove legend
scale_size_continuous(range=c(1,20),
guide="none") # change colors & remove legend
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df,
aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000/2),
color="#32caf6", alpha=0.5) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
# geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="PBDB") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") + # change colors & remove legend
scale_size_continuous(range=c(1,20),
guide="none") # change colors & remove legend
p<- ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(data=countries_wintri,
geom_polygon(fill="black") +
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df,
aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000/2),
geom_path(data=countries_wintri,
color="#32caf6", alpha=0.5) +
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
# geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="PBDB") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") + # change colors & remove legend
scale_size_continuous(range=c(1,20),
guide="none") # change colors & remove legend
p<- ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df,
aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000/2),
color="#32caf6", alpha=0.5) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
# geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="PBDB") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") + # change colors & remove legend
scale_size_continuous(range=c(1,20),
guide="none") # change colors & remove legend
ggsave(plot=p, "maps/map9.png", width=12.5, height=8.25, dpi=72)
ggsave(plot=p, "map9.png", width=12.5, height=8.25, dpi=300)
ggsave(plot=p, "map9.tif", width=12.5, height=8.25, dpi=300)
?ggsave
ggsave(plot=p, "map9.tiff", width=12.5, height=8.25, dpi=300)
ggsave(plot=p, "map9.tiff", width=12.5, height=8.25, units= "cm", dpi=300)
ggsave(plot=p, "map.png", width=12.5, height=8.25, dpi=72)
ggsave(plot=p, "map.png", width=12, height=8, dpi=72)
ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df,
aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000/2),
color="#32caf6", alpha=0.5) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
# geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="PBDB: Canis + Quaternary") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") + # change colors & remove legend
scale_size_continuous(range=c(1,20),
guide="none") # change colors & remove legend
p<- ggplot(bbox_wintri, aes(long,lat, group=group)) +
geom_polygon(fill="black") +
geom_polygon(data=countries_wintri,
aes(long,lat, group=group, fill=hole)) +
geom_point(data=places_robin_df,
aes(LONGITUDE, LATITUDE,
group=NULL, fill=NULL,
size=POP2000/2),
color="#32caf6", alpha=0.5) +
geom_path(data=countries_wintri,
aes(long,lat, group=group, fill=hole),
color="grey50", size=0.3) +
# geom_path(data=grat_wintri, aes(long, lat, group=group, fill=NULL), linetype=3, color="grey60") +
labs(title="PBDB: Canis + Quaternary") +
coord_equal(ratio=1) +
theme_opts +
scale_fill_manual(values=c("white", "white"), guide="none") + # change colors & remove legend
scale_size_continuous(range=c(1,20),
guide="none") # change colors & remove legend
plot (p)
ggsave(plot=p, "map.png", width=12.5, height=8.25, dpi=300)
number_of_subtaxa<- function (data, show=c("species", "genera", "tribes", "subfamilies", "families","superfamilies",
"orders", "classes", "subclasses", "subphyla", "phyla")){
number_subphyla<- length(which (data$rnk== 25))
number_phyla<- length(which (data$rnk== 20))
number_class_plants_invertebrates<- length(which (data$rnk== 17))
number_subclass<- length(which (data$rnk== 16))
number_class<- length(which (data$rnk== 15))
number_order<- length(which (data$rnk== 13))
number_superfamilies<- length(which (data$rnk== 10))
number_families<- length(which (data$rnk== 9))
number_subfamilies<- length(which (data$rnk== 8))
number_tribes<- length(which (data$rnk== 7))
number_genera<- length(which (data$rnk== 5))
number_species<- length(which (data$rnk== 3))
all<- c("species", "genera", "tribes", "subfamilies", "families","superfamilies",
"orders",  "subclasses", "classes","subphyla", "phyla")
subtaxa<- data.frame( number_species, number_genera, number_tribes, number_subfamilies, number_families,
number_superfamilies, number_order, number_subclass, number_class, number_subphyla, number_phyla)
names (subtaxa)<- all
subtaxa [,match (show, all)]
}
species<- data [data$rnk==3, ]
max_sp<- aggregate(species$eag, list(species$tna), max)
min_sp<- aggregate(species$lag, list(species$tna), min)
temporal_range<- data.frame (max_sp [,2], min_sp[,2])
row.names (temporal_range)<- max_sp[,1]
colnames (temporal_range)<- c("max", "min")
pos<- c(1:dim (temporal_range)[1])
t_range<- cbind (temporal_range, pos)
order_by_appearance<- t_range [order (t_range$max),]
t_range<- order_by_appearance
t_range$pos<- c(1:dim (t_range)[1])
division<- seq(from=0, to=2, by=0.2)
which (t_range$min <= division [1] & t_range$max>= division [2])
json_list<- sapply(json_data$records, unlist)
json_df<- as.data.frame (do.call("rbind", json_list))
json_list
data<- as.data.frame (t(json_list))
str (data)
data
